group_by(Anio= year(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total_nuevos = sum(Total, na.omit=TRUE))#ahora que tengo todos los datos nuevos por año, los sumare para tener el total por año
resumen_chile <- casos %>%
filter(Region != "Total", #tengo una region total que no quiero
Categoria == "Casos nuevos totales") %>% #solo quiero los casos nuevos
group_by(Region, Anio= year(Fecha), Mes = month(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total_nuevos = sum(Total, na.omit=TRUE))#ahora que tengo todos los datos nuevos por año, los sumare para tener el total por año
View(resumen_chile)
casos %>%
filter(Categoria == "Casos nuevos totales") %>%
group_by(Semana= week(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total = sum(Total)) %>%
mutate(Var= (Total/ lag(Total)-1)*100) %>%
filter(Semana != 53) %>%
ggplot(aes(Semana,Var))+
geom_line()+
casos %>%
filter(Categoria == "Casos nuevos totales") %>%
group_by(Semana= week(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total = sum(Total)) %>%
mutate(Var= (Total/ lag(Total)-1)*100) %>%
filter(Semana != 53) %>%
ggplot(aes(Semana,Var))+
geom_line()+
geom_smooth()
casos %>%
filter(Categoria == "Casos nuevos totales") %>%
group_by(Semana= week(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total = sum(Total)) %>%
mutate(Var= (Total/ lag(Total)-1)*100) %>%
filter(Semana != 53) %>%
ggplot(aes(Semana,Var))+
geom_line()+
geom_smooth()
casos %>%
filter(Categoria == "Casos nuevos totales") %>%
group_by(Semana= week(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
casos %>%
filter(Categoria == "Casos nuevos totales") %>%
group_by(Semana= week(Fecha))
casos %>%
filter(Categoria == "Casos nuevos totales") %>%
group_by(Semana= week(Fecha))
?lag
library(tidyverse)
#limpieza de dato ----------
table
#limpieza de dato ----------
tablea4
#limpieza de dato ----------
table4a
tablacasos <- table4a %>%
gather( '1999', '2000', key="año", value="cases") #unir dos variables en una sola columna
tablacasos
table4b
tablapoblacion <- table4b %>%
gather( '1999', '2000', key="año", value="population") #unir dos variables en una sola columna
tablapoblacion
#vamos a combinar las dos tablas para tener poblacion casos por años
nuevatabla <- left_join(tablacasos, tablapoblacion)
nuevatabla
library(tidyverse)
install.packages("datos")
library(datos)
library(ggplot2)
ggplot(data = diamantes)+
geom_bar(mapping = aes(x=corte))
diamantes %>%
count(corte)
ggplot(data = diamantes)+
geom_histogram(mapping = aes(x=quilate), binwidth = 0.5)
library(ggplot2)
library(datos)
library(tidyverse)
ggplot(data = diamantes)+
geom_histogram(mapping = aes(x=quilate), binwidth = 0.5)
diamantes %>%
count(cut_width(quilate, 0.5))
pequenos <- diamantes %>%
filter(quilate<3)
pequenos
ggplot(data= pequenos, mapping = aes(x=quilate))+
geom_histogram(binwidth = 0.1)
ggplot(data= pequenos, mapping = aes(x=quilate))+
geom_freqpoly(binwidth = 0.1)
ggplot(data= pequenos, mapping = aes(x=quilate, colour = corte))+
geom_freqpoly(binwidth = 0.1)
fiel
ggplot(data = fiel, mapping = aes(x=erupciones))+
geom_histogram(binwidth = 0.25)
ggplot(data = diamantes)+ #aca buscamos valores inusuales
geom_histogram(mapping = aes(x=y), binwidth = 0.5)+
coord_cartesian(ylim = c(0,50))
inusual <- diamantes %>%
filter(y < 3 | y > 20) %>%
select(precio,x,y,z) %>%
arrange(y)
inusual
#opcion 2 reemplazar valores inusuales con valores faltantes
diamantes2 <- diamantes %>%
mutate(y=ifelse(y < 3 | y > 20, NA, y))
ggplot(data=diamantes2, mapping = aes(x=x,y=y))+
geom_point()
library(datos)
library(ggplot2)
ggplot(data=diamantes2, mapping = aes(x=x,y=y))+
geom_point(na.rm = TRUE) #ignora los NA
ggplot(data= diamantes, mapping = aes(x = precio))+
geom_freqpoly(mapping = aes(colour = corte), binwidth = 500)
ggplot(diamantes)+
geom_bar(mapping = aes(x = corte))
ggplot(data= diamantes, mapping = aes(x = corte, y = precio))+
geom_boxplot()
ggplot(data= millas, mapping = aes(x = clase, y = autopista))+
geom_boxplot()
ggplot(data= millas)+
geom_boxplot(mapping = aes(x=reorder(clase, autopista, FUN = )))
ggplot(data= millas)+
geom_boxplot(mapping = aes(x=reorder(clase, autopista, FUN = median ), y= autopista ))
ggplot(data= millas)+
geom_boxplot(mapping = aes(x=reorder(clase, autopista, FUN = median ), y= autopista ))+
coord_flip()
#dos variables categoricas
ggplot(data = diamantes)+
geom_count(mapping = aes(x = corte, y = color))
diamantes %>%
count(color, corte)
library(tidyverse)
library(datos)
library(ggplot2)
diamantes %>%
count(color, corte)
diamantes %>%
count(color, corte) %>%
ggplot(mapping = aes(x = color, y = corte))+
geom_tile(mapping = aes(fill = n))
ggplot(data = diamantes)+
geom_point(mapping = aes(x = quilate, y = precio), alpha = 1/100)
ggplot(data = diamantes)+
geom_point(mapping = aes(x = quilate, y = precio))
ggplot(data = pequenos)+
geom_bin2d(mapping = aes(x= quilate, y = precio))
install.packages("hexbin")
library(hexbin)
ggplot(data = pequenos)+
geom_hex(mapping = aes(x= quilate, y = precio))
library(readxl)
library(lubridate)
#metricas
library(tidyverse)
install.packages(Rmisc)
install.packages("Rmisc")
library(Rmisc)
atenciones <- read_excel("data/AtencionesUrgencias.xlsx")
#leer excel
poblacion_comunas2 <- read_excel("data/poblacion_comunas2.xlsx", skip=6,sheet=1 )
atenciones <- read_excel("data/AtencionesUrgencias.xlsx")
atenciones <- read_excel("data/AtencionesUrgencia.xlsx")
View(atenciones)
respiratorias <- atenciones %>%
slice(4:11)
respiratorias <- respiratorias %>%
rename(tipo = "Tipo de atencion") %>%
mutate(tipo = str_remove(tipo, patten = " \\(([^\\)]+)\\)"))
respiratorias <- respiratorias %>%
rename(tipo = "Total de atenciones de urgencias") %>%
mutate(tipo = str_remove(tipo, patten = " \\(([^\\)]+)\\)"))
respiratorias <- respiratorias %>%
rename(tipo = "Total de atenciones de urgencia") %>%
mutate(tipo = str_remove(tipo, patten = " \\(([^\\)]+)\\)"))
respiratorias <- respiratorias %>%
rename(tipo = "Total de atenciones de urgencia") %>%
mutate(tipo = str_remove(tipo, patten = " \\(([^\\)]+)\\)"))
View(respiratorias)
respiratorias <- atenciones %>%
slice(4:11)
respiratorias <- respiratorias %>%
rename(tipo = "Total de atenciones de urgencia") %>%
mutate(tipo = str_remove(tipo, patten = " \\(([^\\)]+)\\)"))
atenciones <- read_excel("data/AtencionesUrgencia.xlsx")
View(atenciones)
respiratorias <- atenciones %>%
slice(4:11)
respiratorias <- respiratorias %>%
rename(tipo = "tipo") %>%
mutate(tipo = str_remove(tipo, patten = " \\(([^\\)]+)\\)"))
respiratorias <- respiratorias %>%
mutate(tipo = str_remove(tipo, patten = " \\(([^\\)]+)\\)"))
respiratorias <- respiratorias %>%
mutate(tipo = str_remove(tipo, pattern = " \\(([^\\)]+)\\)"))
respiratorias_long <- respiratorias %>%
pivot_longer(cols =-tipo,
names_to = "fecha",
values_to =  "n")
View(respiratorias_long)
respiratorias_long <- respiratorias_long %>%
mutate(tipo = factor(tipo),
fecha = ymd(fecha))
respiratorias_long <- respiratorias_long %>%
mutate(tipo = factor(tipo),
fecha = ymd(fecha))
#metricas
library(tidyverse)
library(lubridate)
library(readxl)
library(Rmisc)
respiratorias_long <- respiratorias_long %>%
mutate(tipo = factor(tipo),
fecha = ymd(fecha))
respiratorias_long <- respiratorias_long %>%
mutate(tipo = factor(tipo),
fecha = as.Date(fecha))
View(respiratorias_long)
respiratorias_long <- respiratorias_long %>%
mutate(tipo = factor(tipo),
fecha = as.Date(fecha, format="%Y-%m-%d"))
glimpse(respiratorias_long)
respiratorias_long <- respiratorias_long %>%
mutate(tipo = factor(tipo),
fecha = ymd(fecha))
glimpse(respiratorias_long)
install.packages("dataexplorer")
install.packages("DataExplorer")
library(DataExplorer)
introduce(respiratorias_long)
plot_intro(respiratorias_long)
sum(respiratorias_long$n)
min(respiratorias_long$n)
max(respiratorias_long$n) #maximo numero de casos
respiratorias_long %>%
group_by(mes = month(fecha)) %>%
dplyr::summarise(total = sum(n),
min= min(n),
max= max(n),
IQR= IQR(n), #intervalo intercuartilico
mean= mean(n),
se= sd(n),
median = median(n),
q10= quantile(n, probs = 0.1),
q90= quantile(n, probs = 0.9),
upper_ci = CI(n, 0.95)[1],
lower_ci = CI(n, 0.95)[3]
)
respiratorias_long %>%
group_by(mes = month(fecha)) %>%
dplyr::summarise(total = sum(n),
min= min(n),
max= max(n),
IQR= IQR(n), #intervalo intercuartilico
#mucha dispersion de datos
mean= mean(n),
se= sd(n),
median = median(n),
q10= quantile(n, probs = 0.1),
q90= quantile(n, probs = 0.9),
upper_ci = CI(n, 0.95)[1], #intervalo de confianza
lower_ci = CI(n, 0.95)[3]  #intervalo donde se mueven el 95% de los datos
)
attach(respiratorias_long)
attach(respiratorias_long)
attach(respiratorias_long)
attach(respiratorias_long)
respiratorias_long %>%
group_by(mes = month(fecha)) %>%
dplyr::summarise(total = sum(n),
min= min(n),
max= max(n),
IQR= IQR(n), #intervalo intercuartilico
#mucha dispersion de datos
mean= mean(n),
se= sd(n),
median = median(n),
q10= quantile(n, probs = 0.1),
q90= quantile(n, probs = 0.9),
upper_ci = CI(n, 0.95)[1], #intervalo de confianza
lower_ci = CI(n, 0.95)[3]  #intervalo donde se mueven el 95% de los datos
)
respiratorias <- respiratorias %>%
mutate(tipo = str_remove(tipo, pattern = " \\(([^\\)]+)\\)"))
respiratorias_long <- respiratorias %>%
pivot_longer(cols =-tipo,
names_to = "fecha",
values_to =  "n")
respiratorias_long <- respiratorias_long %>%
mutate(tipo = factor(tipo),
fecha = ymd(fecha))
attach(respiratorias_long)
numero <-  cut(n,breaks = nclass.Sturges(n))
freq <- as.data.frame(table(numero))
tabla <- transform(freq, cum_freq = cumsum(freq),
rel = prop.table(freq), cum_rel = cumsum(prop.table(freq)))
tabla <- transform(freq, cum_freq = cumsum(freq),
rel = prop.table(freq), cum_rel = cumsum(prop.table(freq)))
numero <-  cut(n,breaks = nclass.Sturges(n))
Freq <- as.data.frame(table(numero))
tabla <- transform(Freq, cum_freq = cumsum(Freq),
rel = prop.table(Freq), cum_rel = cumsum(prop.table(Freq)))
tabla
View(freq)
respiratorias_long %>%
ggplot(aes(n, tipo))+
geom_boxplot()
respiratorias_long %>%
ggplot(aes(n))+
geom_boxplot()
respiratorias_long %>%
ggplot(aes(n))+
geom_histogram()+
facet_wrap(¬ tipo)
respiratorias_long %>%
ggplot(aes(n))+
geom_histogram()+
facet_wrap(- tipo)
respiratorias_long %>%
ggplot(aes(n))+
geom_histogram()+
facet_wrap(∼ tipo)
respiratorias_long %>%
ggplot(aes(n))+
geom_histogram()+
facet_wrap( tipo)
respiratorias_long %>%
ggplot(aes(fecha, n, color= tipo))+
geom_smooth(se=FALSE)
install.packages("installr", dependencies = TRUE)
library(installr)
updateR()
library(readxl)
library(writexl)
library(tidyverse)
install.packages("janitor")
indicadores <- read_xlsx("data/Popular_Indicators.xlsx")
listado <- read_excel("data/listado_pacientes.xlsx", skip = 7)
library(readxl)
library(writexl)
library(tidyverse)
library(janitor)
listado <- read_excel("data/listado_pacientes.xlsx", skip = 7)
listado <- read_excel("data/listado_pacientes.xlsx",
range= cell_rows(c(9:2089))) %>%
select(-c(2:3)) %>%
clean_names( )
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df(∼ read_excel(., col_names = TRUE))
library(readxl)
library(writexl)
library(tidyverse)
library(janitor)
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df(∼ read_excel(., col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df(∼ read_excel(., col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df(∼read_excel(., col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df(read_excel(., col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df(read_excel(., col_names = TRUE))
help("∼")
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df(read_excel(., col_names = TRUE))
#leer multiples archivos
files <- list.files(path ="data", pattern = "archivo", full.names = TRUE) %>%
map_df(read_excel(., col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "/data", pattern = "archivo", full.names = TRUE) %>%
map_df(read_excel(., col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "/data", pattern = "archivo", full.names = TRUE) #%>%
#leer multiples archivos
files <- list.files(path = "/data", pattern = "archivo", full.names = TRUE) %>%
map_df(read_excel(., col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "/data", pattern = "archivo", full.names = TRUE) %>%
map_df(read_excel(., col_names = TRUE))
∼
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df(∼ read_excel(., col_names = TRUE))
help("∼")
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df(== read_excel(., col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) #%>%
files
map_df( read_excel(., col_names = TRUE))
map_df( read_excel(., col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df( read_excel(., col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df(files, read_excel(., col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df( read_excel(files, col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df( read_excel(files, col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df(∼ read_excel(., col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df(∼ read_excel(files, col_names = TRUE))
View(files)
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df( <-  read_excel(, col_names = TRUE))
#leer multiples archivos
files <- list.files(path = "data", pattern = "archivo", full.names = TRUE) %>%
map_df(:: read_excel(, col_names = TRUE))
#unir las diferentes hojas de un mismo excel
sheet_names <- excel_sheets("data/archivo1.xlsx")
sheet_names
list_all <-  lapply(sheet_names, function(x){
as.data.frame(read_excel("data/archivo1.xlsx", sheet = x, col_names = TRUE ))
})
View(list_all)
View(list_all)
list_all <-  lapply(sheet_names, function(x){
as.data.frame(read_excel("data/archivo1.xlsx", sheet = x, col_names = TRUE ))
})
list_all
names(list_all) <- sheet_names
list_all
library(data.table)
files_path <- list.files(path = "data", pattern = "archivo", full.names = TRUE)
names_files <- list.files(path = "data", pattern = "archivo") |>
str_extract_all(pattern = ".*[^.xlsx]", simplify = TRUE)
df_list <- lapply(files_path, function(x) {
sheets <- excel_sheets(x)
dfs <- lapply(sheets, function(y) {
read_excel(x, sheet = y, col_names = TRUE)
})
names(dfs) <- sheets
dfs
})
names(df_list) <- names_files
df_list
df_list$archivo1$enero
walk(df_list, .f = print)
# Pasar de una lista a dataframe
data <- rbindlist(lapply(df_list, rbindlist, id = "mes"))
write_xlsx(data, "Talleres/data/data_completa.xlsx")
write_xlsx(data, "data/data_completa.xlsx")
library(tidyverse)
ggplot2::mpg
mpg
view(mpg)
help(mpg)
?mpg
ggplot(data=mpg)+
geom_point(mapping = aes(x=displ, y= hwy, colour = class))
ggplot(data=mpg)+
geom_point(mapping = aes(x=displ, y= hwy, color = class))
ggplot(data =mpg)+
geom_point(mapping = aes(x=displ, y=hwy))+
facet_wrap(~class, nrow = 3)
ggplot(data =mpg)+
geom_point(mapping = aes(x=displ, y=hwy))+
facet_wrap(~class, nrow = 2) #
ggplot(data =mpg)+
geom_point(mapping = aes(x=displ, y=hwy))+
facet_wrap(~class, nrow = 6) #
ggplot(data =mpg)+
geom_point(mapping = aes(x=displ, y=hwy))+
facet_wrap(~class, nrow = 10) #
ggplot(data =mpg)+
geom_point(mapping = aes(x=displ, y=hwy))+
facet_wrap(~class, nrow = 2) #
ggplot(data =mpg)+
geom_point(mapping = aes(x=displ, y=hwy))+
facet_grid(drv~cy)
ggplot(data =mpg)+
geom_point(mapping = aes(x=displ, y=hwy))+
facet_grid(drv~cyl)
ggplot(data =mpg)+
geom_point(mapping = aes(x=displ, y=hwy))+
facet_grid(.~cyl)
mpg$cyl
unique(mpg$cyl)
ggplot(data =mpg)+
geom_point(mapping = aes(x=displ, y=hwy, color =class))+
facet_grid(.~cyl) #muestra el comportamiento individual separado por clase
ggplot(data =mpg)+
geom_point(mapping = aes(x=displ, y=hwy))+
facet_grid(drv~cyl)
ggplot(data =mpg)+
geom_point(mapping = aes(x=displ, y=hwy, color =class))+
facet_grid(drv~cyl) #muestra el comportamiento individual separadodos variables
ggplot(data =mpg)+
geom_smooth( mapping = aes(x=displ, y= hwy, linetype= drv))
ggplot(data =mpg)+
geom_smooth( mapping = aes(x=displ, y= hwy))
ggplot(data =mpg)+
geom_smooth( mapping = aes(x=displ, y= hwy, linetype= drv))
geom_smooth( mapping = aes(x=displ, y= hwy, linetype= drv, color =drv))
ggplot(data =mpg)+
geom_point( mapping = aes(x=displ, y= hwy, color=drv))+
geom_smooth( mapping = aes(x=displ, y= hwy, linetype= drv, color =drv))
ggplot(data =mpg,mapping = aes(x=displ, y= hwy))+
geom_point( mapping = aes(color=class))+
geom_smooth( data = filter(mpg, class=="suv"), se=F)
