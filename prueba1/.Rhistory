library(tidyverse)
nombres <- c("juan", "pedro", "luis", "sofia")
edades <-c(20,23,43,27)
curso <- data.frame(nombres,edades)
glimpse(curso)
##carateristicas necesarias, columnas filas tipos de datos
str(curso)
data("HairEyeColor")
HairEyeColor[,,1]
HairEyeColor
HairEyeColor[,,"female"]
HairEyeColor[,,"Female"]
library (epitools)
install.packages("epitools")
library (epitools)
H <- expand.table(HairEyeColor)
View(H)
x <- list(rep("pepe",3),1:20)
m <- matrix(c(1,2,3,4,5,6), nrow=2, byrow = TRUE)
m
a <- array(1:12,c(2,3,2)) ##crea dos grupos de dos filas y 3 columnas
a
dim(b) <- c(3,2)
b <- 1:6
dim(b) <- c(3,2)
b
dim(b) <- c(3,2) #re escribe el arreglo en una matrix de dimension (x,y)
popu <- matrix(c(popu2018,popu2019), nrow=3, byrow=FALSE)
popu2018 <- c(123,345,300)
popu2019 <- c(213,232,522)
popu <- matrix(c(popu2018,popu2019), nrow=3, byrow=FALSE)
colnames(popu) <- c("poblacion2018", "poblacion2019")
rownames(popu) <- c("italia","francia","cincelejo")
popu
popu
popu[c("italia","francia")]
popu[c("italia","francia"),]
pupu[1,]
popu[1,]
pupu <- cbind( popu, popu2020 = c (142,323,543))
pupu
popu <- rbind(popu, españa =c(132,426,763))
pupu
popu <- rbind(popu, españa =c(132,426,763))
popu <- rbind(popu, españa =c(132,426))
pupu
popu <- rbind(popu, españa =c(132,426,434))
popu[1,]
pupu <- cbind( popu, popu2020 = c (142,323,543))
pupu <- cbind( popu, popu2020 = c (142,323,543))
popu
popu2018 <- c(123,345,300)
popu2019 <- c(213,232,522)
popu <- matrix(c(popu2018,popu2019), nrow=3, byrow=FALSE)
colnames(popu) <- c("poblacion2018", "poblacion2019")
rownames(popu) <- c("italia","francia","cincelejo")
popu
pupu <- cbind( popu, popu2020 = c (142,323,543))
popu <- rbind(popu, españa =c(132,426,434))
popu
pupu <- cbind( popu, popu2020 = c (142,323,543,435))
popu
View(pupu)
popu <- cbind( popu, popu2020 = c (142,323,543,435))
popu
View(pupu)
delete.response(pupu)
rowsum(popu)
rowSums(popu)
mean (popu[,2])
max(popu)
wich(popu == max(popu), arr.ind = TRUE)
which(popu == max(popu), arr.ind = TRUE)
is data.frame(popu)
isdata.frame(popu)
isdataframe(popu)
is.data.frame(popu)
(y <- seq(1, 10, length.out = 5))
library(tidyverse)
library(datos)
install.packages("datos")
ggplot(data=millas) +
geom_point(mapping = aes(x=cilindrara, y= autopista))
datos::millas
ggplot(data=millas) +
geom_point(mapping = aes(x=cilindrara, y= autopista))
ggplot(data=datos::millas) +
geom_point(mapping = aes(x=cilindrara, y= autopista))
ggplot(data=datos::millas) +
geom_point(mapping = aes(x=cilindrada, y= autopista))
library(readr)
datos <- read.csv(data/casos_totales.csv)
datos <- read.csv(data/casos_totales.csv, header = TRUE, sep =",", dec=";")
datos <- read.csv("data/casos_totales.csv", header = TRUE, sep =",", dec=";")
View(datos)
datos <- transform(datos, poblacion = as.numeric((as.factor(poblacion))))
glimpse(datos)
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library("dplyr")
library(dplyr)
glimpse(datos)
datos <- transform(datos, poblacion = as.numeric((as.factor(poblacion))))
datos <- transform(datos, Poblacion = as.numeric((as.factor(poblacion))))
datos <- transform(datos, Poblacion = as.numeric((as.factor(Poblacion))))
datos$Casos.confirmados <- as.numeric(datos$Casos.confirmados)
datos$Poblacion <- as.numeric(datos$Poblacion)
View(datos)
filter(datos,
Region=="Metropolitana",
Comuna=="Buin")
filter(datos,
Region=="Metropolitana",
Comuna=="Buin") %>%
rowSums(datos$Casos.confirmados)
filter(datos,
Region=="Metropolitana",
Comuna=="Buin") %>%
rowSums(Casos.confirmados)
filter(datos,
Region=="Metropolitana",
Comuna=="Buin") %>%
rowSums(datos$Casos.confirmados)
filter(datos,
Region=="Metropolitana",
Comuna=="Buin") %>%
colSums(datos$Casos.confirmados)
filter(datos,
Region=="Metropolitana",
Comuna=="Buin") %>%
colSums(datos$Casos.confirmados, na.rm=TRUE)
filter(datos,
Region=="Metropolitana",
Comuna=="Buin")
filter(datos,
Region=="Metropolitana",
Comuna=="Buin") %>% Casos.confirmados
filter(datos,
Region=="Metropolitana",
Comuna=="Buin") %>% datos$Casos.confirmados
colSums(filter(datos,
Region=="Metropolitana",
Comuna=="Buin" ) )
colSums(filter(
datos,Comuna=="Buin" ) )
colSums(filter(
datos,Comuna=="Buin" )$casos.confirmados )
colSums(filter(
datos,Comuna=="Buin" ).casos.confirmados )
rowSums(popu) #suma las columnas
filter(datos,Comuna=="Buin")
arrange(datos)
arrange(datos, Casos.confirmados)
arrange(datos, desc(Casos.confirmados)) #ordena creciente
select(filter(datos,Comuna=="Buin"), Casos.confirmados )
select(datos,region:Poblacion)
select(datos,Region:Poblacion)
select(datos,-Region:Poblacion) #selecciona todas las columnas entre region y comuna
select(datos,-(Region:Poblacion)) #selecciona todas las columnas entre region y comuna
select(datos, Casos.confirmados,Poblacion, everything())
mutate(datos, porcentaje=Poblacion/Casos.confirmados)
summarise(datos, Casos.confirmados, na.rm=TRUE)
reframe(datos, Casos.confirmados, na.rm=TRUE)
library(tidyverse)
library(lubridate)
library(dplyr)
casos <- read.csv("https://raw.githubusercontent.com/MinCiencia/Datos-COVID19/master/output/producto3/TotalesPorRegion_std.csv")
View(casos)
str(casos)
str(casos)
##transform(datos, Poblacion = as.numeric((as.factor(Poblacion))))
casos <- transform(casos, fecha=as.Date(fecha))
##transform(datos, Poblacion = as.numeric((as.factor(Poblacion))))
casos <- transform(casos, fecha=as.Date(casos$Fecha))
View(casos)
##transform(datos, Poblacion = as.numeric((as.factor(Poblacion))))
casos <- transform(casos, Fecha=as.Date(casos$Fecha))
casos <- read.csv("https://raw.githubusercontent.com/MinCiencia/Datos-COVID19/master/output/producto3/TotalesPorRegion_std.csv")
View(casos)
##transform(datos, Poblacion = as.numeric((as.factor(Poblacion))))
casos <- transform(casos, Fecha=as.Date(casos$Fecha))
##transform(datos, Poblacion = as.numeric((as.factor(Poblacion))))
casos <- transform(casos, Fecha=as.Date(casos$Fecha, ,format="%Y/%m/%d"))
str(casos)
casos %>%
filter(Region != "Total", #tengo una region total que no quiero
Categoria == "Casos nuevos totales") %>% #solo quiero los casos nuevos
group_by(Anio= year(fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total_nuevos = sum(Total, na.omit=TRUE))#ahora que tengo todos los datos nuevos por año, los sumare para tener el total por año
casos %>%
filter(Region != "Total", #tengo una region total que no quiero
Categoria == "Casos nuevos totales") %>% #solo quiero los casos nuevos
group_by(Anio= year(fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total_nuevos = sum(Total, na.omit=TRUE))#ahora que tengo todos los datos nuevos por año, los sumare para tener el total por año
filter(casos$Region != "Total", #tengo una region total que no quiero
Categoria == "Casos nuevos totales")
filter(casos$Region != "Total", #tengo una region total que no quiero
casos$Categoria == "Casos nuevos totales")
unique(casos$Categoria)
filter(casos$Region != "Total", #tengo una region total que no quiero
casos$Categoria == "Casos nuevos totales")
filter(casos$Region != "Total", #tengo una region total que no quiero
casos$Categoria == "Casos nuevos totales")%>%
group_by(Anio= year(fecha))
library(tidyverse)
library(lubridate)
library(dplyr)
casos <- read.csv("https://raw.githubusercontent.com/MinCiencia/Datos-COVID19/master/output/producto3/TotalesPorRegion_std.csv")
casos <- transform(casos, Fecha=as.Date(casos$Fecha, ,format="%Y/%m/%d")) #transforme el char a fecha
str(casos)
casos <- transform(casos, Fecha=as.Date(casos$Fecha, ,format="%Y/%m/%d")) #transforme el char a fecha
str(casos)
View(casos)
casos <- transform(casos, Fecha=as.Date(casos$Fecha,format="%Y/%m/%d")) #transforme el char a fecha
str(casos)
casos <- read.csv("https://raw.githubusercontent.com/MinCiencia/Datos-COVID19/master/output/producto3/TotalesPorRegion_std.csv")
str(casos)
casos <- transform(casos, Fecha=as.Date(casos$Fecha,format="%Y/%m/%d")) #transforme el char a fecha
str(casos)
str(casos)
filter(casos$Region != "Total", #tengo una region total que no quiero
casos$Categoria == "Casos nuevos totales")%>%
group_by(Anio= year(fecha))
filter(casos$Region != "Total", #tengo una region total que no quiero
casos$Categoria == "Casos nuevos totales")
casos <- transform(casos, Fecha=as.Date(casos$Fecha,format="%Y/%m/%d")) #transforme el char a fecha
str(casos)
library(tidyverse)
library(lubridate)
library(dplyr)
casos <- read.csv("https://raw.githubusercontent.com/MinCiencia/Datos-COVID19/master/output/producto3/TotalesPorRegion_std.csv")
str(casos)
casos <- transform(casos, Fecha=as.Date(casos$Fecha,format="%Y/%m/%d")) #transforme el char a fecha
str(casos)
casos <- transform(casos, Fecha=as.Date(casos$Fecha)) #transforme el char a fecha
str(casos)
str(casos)
unique(casos$Region) #me muestra los valores unicos (cuales regiones tengo)
filter(casos$Region != "Total", #tengo una region total que no quiero
casos$Categoria == "Casos nuevos totales")
filter(casos$Region != "Total", #tengo una region total que no quiero
)
filter(casos$Region != "Total" #tengo una region total que no quiero
)
casos %>%
filter(Region != "Total", #tengo una region total que no quiero
Categoria == "Casos nuevos totales") %>% #solo quiero los casos nuevos
group_by(Anio= year(fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total_nuevos = sum(Total, na.omit=TRUE))#ahora que tengo todos los datos nuevos por año, los sumare para tener el total por año
casos %>%
filter(Region != "Total", #tengo una region total que no quiero
Categoria == "Casos nuevos totales") %>% #solo quiero los casos nuevos
group_by(Anio= year(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total_nuevos = sum(Total, na.omit=TRUE))#ahora que tengo todos los datos nuevos por año, los sumare para tener el total por año
str(casos)
casos <- read.csv("https://raw.githubusercontent.com/MinCiencia/Datos-COVID19/master/output/producto3/TotalesPorRegion_std.csv")
casos <- transform(casos, Fecha=as.Date(casos$Fecha,format="%Y/%m/%d")) #transforme el char a fecha
casos <- read.csv("https://raw.githubusercontent.com/MinCiencia/Datos-COVID19/master/output/producto3/TotalesPorRegion_std.csv")
library(lubridate)
casos <- transform(casos, Fecha=as.Date(casos$Fecha,format="%Y/%m/%d")) #transforme el char a fecha
casos <- read.csv("https://raw.githubusercontent.com/MinCiencia/Datos-COVID19/master/output/producto3/TotalesPorRegion_std.csv")
casos <- transform(casos, Fecha=as.Date(casos$Fecha,format="%y/%d/%b")) #transforme el char a fecha
str(casos)
casos <- transform(casos, Fecha=as.Date(casos$Fecha,format="%Y/%m/%d")) #transforme el char a fecha
str(casos)
casos <- read.csv("https://raw.githubusercontent.com/MinCiencia/Datos-COVID19/master/output/producto3/TotalesPorRegion_std.csv")
str(casos)
casos <- transform(casos, Fecha=as.Date(casos$Fecha,format="%Y/%m/%d")) #transforme el char a fecha
str(casos)
library(tidyverse)
library(lubridate)
library(lubridate)
library(dplyr)
casos <- read.csv("https://raw.githubusercontent.com/MinCiencia/Datos-COVID19/master/output/producto3/TotalesPorRegion_std.csv")
str(casos)
casos <- transform(casos, Fecha=as.Date(casos$Fecha,format="%Y-%m-%d")) #transforme el char a fecha
str(casos)
casos %>%
filter(Region != "Total", #tengo una region total que no quiero
Categoria == "Casos nuevos totales") %>% #solo quiero los casos nuevos
group_by(Anio= year(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total_nuevos = sum(Total, na.omit=TRUE))#ahora que tengo todos los datos nuevos por año, los sumare para tener el total por año
casos %>%
filter(Region != "Total", #tengo una region total que no quiero
Categoria == "Casos nuevos totales") %>% #solo quiero los casos nuevos
group_by(Anio= year(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
casos %>%
filter(Region != "Total", #tengo una region total que no quiero
Categoria == "Casos nuevos totales") %>% #solo quiero los casos nuevos
group_by(Anio= year(Fecha))) %>% #agrupare por cada año, agrupando por años iguales
casos %>%
filter(Region != "Total", #tengo una region total que no quiero
Categoria == "Casos nuevos totales") %>% #solo quiero los casos nuevos
group_by(Anio= year(Fecha)) #%>% #agrupare por cada año, agrupando por años iguales
casos %>%
filter(Region != "Total", #tengo una region total que no quiero
Categoria == "Casos nuevos totales") %>% #solo quiero los casos nuevos
group_by(Anio= year(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total_nuevos = sum(Total, na.omit=TRUE))#ahora que tengo todos los datos nuevos por año, los sumare para tener el total por año
resumen_chile <- casos %>%
filter(Region != "Total", #tengo una region total que no quiero
Categoria == "Casos nuevos totales") %>% #solo quiero los casos nuevos
group_by(Region, Anio= year(Fecha), Mes = month(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total_nuevos = sum(Total, na.omit=TRUE))#ahora que tengo todos los datos nuevos por año, los sumare para tener el total por año
View(resumen_chile)
casos %>%
filter(Categoria == "Casos nuevos totales") %>%
group_by(Semana= week(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total = sum(Total)) %>%
mutate(Var= (Total/ lag(Total)-1)*100) %>%
filter(Semana != 53) %>%
ggplot(aes(Semana,Var))+
geom_line()+
casos %>%
filter(Categoria == "Casos nuevos totales") %>%
group_by(Semana= week(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total = sum(Total)) %>%
mutate(Var= (Total/ lag(Total)-1)*100) %>%
filter(Semana != 53) %>%
ggplot(aes(Semana,Var))+
geom_line()+
geom_smooth()
casos %>%
filter(Categoria == "Casos nuevos totales") %>%
group_by(Semana= week(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
summarise(Total = sum(Total)) %>%
mutate(Var= (Total/ lag(Total)-1)*100) %>%
filter(Semana != 53) %>%
ggplot(aes(Semana,Var))+
geom_line()+
geom_smooth()
casos %>%
filter(Categoria == "Casos nuevos totales") %>%
group_by(Semana= week(Fecha)) %>% #agrupare por cada año, agrupando por años iguales
casos %>%
filter(Categoria == "Casos nuevos totales") %>%
group_by(Semana= week(Fecha))
casos %>%
filter(Categoria == "Casos nuevos totales") %>%
group_by(Semana= week(Fecha))
?lag
